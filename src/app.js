import { App, Auth } from "./navigation";
// import BackgroundFetch from "react-native-background-fetch";
import AuthLoad from "./activities/auth/loading";
import {
  createAppContainer,
  createSwitchNavigator,
  createStackNavigator
} from "react-navigation";

import PushNotificationIOS from "react-native";
import PubNub from "pubnub";
var PushNotification = require("react-native-push-notification");

import Login from "./activities/auth/login";
import ParentHome from "./activities/parent/home";
import AgentHome from "./activities/agent/home";

export default createAppContainer(
  createSwitchNavigator(
    {
      Loading: AuthLoad,
      ParentHome: {
        screen: ParentHome,
        navigationOptions: {
          header: null
        }
      },
      DriverHome: {
        screen: AgentHome,
        navigationOptions: {
          header: null
        }
      },
      Login: {
        screen: Login,
        navigationOptions: {
          header: null
        }
      },
    },
    {
      initialRouteName: "Loading"
    }
  )
);

// Configure it.
// BackgroundFetch.configure(
//   {
//     minimumFetchInterval: 15, // <-- minutes (15 is minimum allowed)
//     // Android options
//     stopOnTerminate: false,
//     startOnBoot: true,
//     requiredNetworkType: BackgroundFetch.NETWORK_TYPE_NONE, // Default
//     requiresCharging: false, // Default
//     requiresDeviceIdle: false, // Default
//     requiresBatteryNotLow: false, // Default
//     requiresStorageNotLow: false // Default
//   },
//   () => {
//     console.log("[js] Received background-fetch event");
//     // Required: Signal completion of your task to native code
//     // If you fail to do this, the OS can terminate your app
//     // or assign battery-blame for consuming too much background-time
//     BackgroundFetch.finish(BackgroundFetch.FETCH_RESULT_NEW_DATA);
//   },
//   error => {
//     console.log("[js] RNBackgroundFetch failed to start");
//   }
// );

// Optional: Query the authorization status.
// BackgroundFetch.status(status => {
//   switch (status) {
//     case BackgroundFetch.STATUS_RESTRICTED:
//       console.log("BackgroundFetch restricted");
//       break;
//     case BackgroundFetch.STATUS_DENIED:
//       console.log("BackgroundFetch denied");
//       break;
//     case BackgroundFetch.STATUS_AVAILABLE:
//       console.log("BackgroundFetch is enabled");
//       break;
//   }
// });

const pubnub = new PubNub({
  publishKey: "pub-c-e7a206b8-5cc8-4474-9e70-9b585e22cec7",
  subscribeKey: "sub-c-6717f572-fa6a-11e9-be22-ea7c5aada356",
  ssl: true
});

pubnub.addListener({
  message: function({ message }) {
    console.log(message);
    // handle message

    const header = `Smartkids Message`;

    PushNotification.localNotification({
      /* Android Only Properties */
      // id: "0", // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
      ticker: `${header} Ticker`, // (optional)
      autoCancel: true, // (optional) default: true
      largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
      smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"
      bigText: message.content, // (optional) default: "message" prop
      subText: "Student has been dropped off", // (optional) default: none
      color: "red", // (optional) default: system default
      vibrate: true, // (optional) default: true
      vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
      tag: "some_tag", // (optional) add tag to message
      // group: "group", // (optional) add group to message
      // ongoing: false, // (optional) set whether this is an "ongoing" notification
      priority: "high", // (optional) set notification priority, default: high
      // visibility: "private", // (optional) set notification visibility, default: private
      importance: "high", // (optional) set notification importance, default: high

      /* iOS only properties */
      // alertAction: // (optional) default: view
      //   category: // (optional) default: null
      // userInfo: // (optional) default: null (object containing additional notification data)

      /* iOS and Android properties */
      title: `${header}`, // (optional)
      message: message.content // (required)
      // playSound: false, // (optional) default: true
      // soundName: "default", // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
      // number: "10", // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
      // repeatType: "day" // (optional) Repeating interval. Check 'Repeating Notifications' section for more info.
      // actions: '["Yes", "No"]' // (Android only) See the doc for notification actions to know more
    });
  }
});

pubnub.subscribe({
  channels: ["pubnub_onboarding_channel"]
});

console.log("subscribed!");
